name: Single Unit Test

on:
  workflow_call:
    inputs:
      gradleVersion:
        type: string
        required: true
        description: 'Gradle version â€“ see: https://github.com/gradle/gradle/releases'
      os:
        type: string
        required: true
        description: 'Operation system'
      script:
        type: string
        required: false
        description: 'Optional OS-dedicated script to run in the beginning'
      testName:
        type: string
        required: false
        description: 'Optional test name to run'

env:
  XDG_CACHE_HOME: "~/.config/"

jobs:
  unitTests:
    name: Gradle ${{ inputs.gradleVersion }} @ ${{ inputs.os }}
    runs-on: ${{ inputs.os }}
    strategy:
      fail-fast: false

    steps:

      - name: Run OS-dedicated script
        if: ${{ inputs.script }}
        run: ${{ inputs.script }}

      - name: Fetch Sources
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Cache XDG_CACHE_HOME
        uses: actions/cache@v3
        with:
          path: ${{ env.XDG_CACHE_HOME }}
          key: ${{ runner.os }}-XDG_CACHE_HOME-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-XDG_CACHE_HOME-

      - name: Run Tests
        env:
          TEST_NAME: ${{ inputs.testName }}
        shell: bash
        run: |
          [ -z "$TEST_NAME" ] && TESTS="" || TESTS="--tests $TEST_NAME"
          
          ./gradlew check test \
            -PtestGradleVersion="${{ inputs.gradleVersion }}" \
            ${{ runner.os == 'Windows' && '-PtestGradleUserHome="C:\\testGradleHome"' || '' }} \
            $TESTS \
            --console=plain

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: ${{ always() }}
        with:
          name: "Unit Tests Report: Gradle ${{ inputs.gradleVersion }} @ ${{ inputs.os }}"
          path: "**/build/test-results/*/TEST-*.xml"
          reporter: java-junit

      - name: Collect Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ inputs.gradleVersion }}-${{ runner.os }}
          path: |
            ${{ github.workspace }}/build/reports/tests
            ${{ github.workspace }}/build/reports/configuration-cache
